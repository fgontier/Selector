package  {		import flash.display.MovieClip;	import flash.net.URLRequest;    import flash.display.Loader;	import flash.events.*;	import flash.display.BlendMode;		public class productButton extends MovieClip 	{		private var _myProduct:XML;		private var myPopup:PopUp;				public function productButton(product:XML) 		{			stop()			_myProduct = product;			addEventListener(Event.ADDED_TO_STAGE,init);		}				private function init(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,init);						if(_myProduct.title == "star")			{				var myStar:RedStar = new RedStar();				myStar.x = 50;				myStar.y = 130;				addChild(myStar);				this.ID.text = "";			} 			else 			{				// show the title				this.ID.text = _myProduct.title;					createPopup();			}						// load the image:			loadImage(_myProduct.image);		} 		function createPopup():void		{			myPopup = new PopUp(_myProduct.parent().@category, _myProduct); 			//addChild(myPopup);			//myPopup.visible = false;		}		function loadImage(clip:String):void		{			var imageLoader:Loader = new Loader();			var imageURL:String = "images/" + clip;			var imageURLReq:URLRequest = new URLRequest(imageURL);				this.addChild(imageLoader);			this.useHandCursor = true;			this.buttonMode = true;						imageLoader.load(imageURLReq);			imageLoader.contentLoaderInfo.addEventListener(Event.INIT, imageLoaded);			imageLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, imageProgress);						}				private function imageProgress (evt:ProgressEvent):void		{			//trace(Math.round((evt.bytesLoaded / evt.bytesTotal)*100));		}		function imageLoaded(evt:Event):void 		{			var targetLoader:Loader = Loader(evt.target.loader);			targetLoader.x = 35;			targetLoader.y = 25;						targetLoader.blendMode = BlendMode.DARKEN;			targetLoader.addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);			targetLoader.addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);			targetLoader.addEventListener(MouseEvent.CLICK, mouseClickHandler);				}				private function mouseClickHandler(e:MouseEvent):void		{			addChild(myPopup);			//myPopup.visible = true;			// move the button on top of display list:			var maxIndex:Number = this.parent.numChildren-1;			parent.setChildIndex(this, maxIndex);				}				private function mouseOverHandler(e:MouseEvent):void		{			this.nextFrame();		}		private function mouseOutHandler(e:MouseEvent):void		{			this.prevFrame();				//myPopup.visible = false;			if(this.myPopup){removeChild(myPopup);}		}							}}