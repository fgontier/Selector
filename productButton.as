package  {		import flash.display.MovieClip;	import flash.net.URLRequest;    import flash.display.Loader;	import flash.events.*;	import flash.display.BlendMode;		public class productButton extends MovieClip 	{		private var _myProduct:XML;				public function productButton(product:XML) 		{			stop()			_myProduct = product;			addEventListener(Event.ADDED_TO_STAGE,init);		}				private function init(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,init);						// show the title			this.ID.text = _myProduct.title;			// load the image:			loadImage(_myProduct.image);		} 		function loadImage(clip:String):void		{			var imageLoader:Loader = new Loader();			var imageURL:String = "images/" + clip;			var imageURLReq:URLRequest = new URLRequest(imageURL);				this.addChild(imageLoader);			this.useHandCursor = true;			this.buttonMode = true;						imageLoader.load(imageURLReq);			imageLoader.contentLoaderInfo.addEventListener(Event.INIT, imageLoaded);			imageLoader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, imageProgress);						}				private function imageProgress (evt:ProgressEvent):void		{			//trace(Math.round((evt.bytesLoaded / evt.bytesTotal)*100));		}		function imageLoaded(evt:Event):void 		{			var targetLoader:Loader = Loader(evt.target.loader);			targetLoader.x = (this.width - targetLoader.width)/2 -3;			targetLoader.y = (this.height - targetLoader.height)/2 -10;						targetLoader.blendMode = BlendMode.DARKEN;			targetLoader.addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);			targetLoader.addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);			//targetLoader.addEventListener(MouseEvent.CLICK, mouseClickHandler);				}				private function mouseOverHandler(e:MouseEvent):void		{			this.nextFrame();		}		private function mouseOutHandler(e:MouseEvent):void		{			this.prevFrame();			}							}}