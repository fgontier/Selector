package  {		import flash.display.MovieClip;	import flash.events.*;	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.text.AntiAliasType;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import com.greensock.*;	import com.greensock.plugins.*;	public class specButton extends MovieClip 	{		public var currentType:String;		private var _myTitle:String;				TweenPlugin.activate([TintPlugin]);				public function specButton(myTitle:String, type:String) 		{			_myTitle = myTitle;			currentType = type;			addEventListener(Event.ADDED_TO_STAGE,init);		}				private function init(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,init);						var hit:Sprite = new Sprite();			hit.buttonMode = true;			hit.useHandCursor = true;			hit.mouseChildren = false							addChild(hit);						var fnt: Arial = new Arial();			var fmt:TextFormat = new TextFormat();			fmt.font = fnt.fontName;			fmt.color = 0x666666;			fmt.size = 13;			var text1:TextField =  new TextField();			text1.autoSize = "left";			text1.embedFonts = true;			text1.defaultTextFormat = fmt;			text1.border = false;			text1.width = 180;			text1.multiline = true;			text1.wordWrap = true;			text1.selectable = false;			text1.text = _myTitle;			hit.addChild(text1);						hit.addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);			hit.addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);			hit.addEventListener(MouseEvent.CLICK, mouseClickHandler);		}				private function mouseOverHandler(e:MouseEvent):void		{			TweenLite.to(e.target, 1, {tint:0x70AC45});			}		private function mouseOutHandler(e:MouseEvent):void		{			TweenLite.to(e.target, 1, {tint:0x666666});						}				private function mouseClickHandler(e:MouseEvent):void		{			this.dispatchEvent(new Event("buttonClicked",true,false));		}			}}